####################
# $名称: Makefile
# $时间:
####################
#1. 定义可执行文件的名称
TARGET = TestMyTar
$(warning "1. $(TARGET)")
#2. 指定此工程所需要头文件路径
INC_PATH = -I. -I./include -I../common
$(warning "$(INC_PATH)")
LIB_PATH = #-L../lib/ 
LIBS = #-lpthread -lrt 
$(warning "2. $(LIB_PATH) $(LIBS)")
#3. 指定cpp 文件的目录
VPATH = .:src
#4. 定义变量包含所有cpp 文件
SRC_PATH = $(foreach dir, $(subst :, ,$(VPATH)), $(wildcard $(dir)/*.cpp))
$(warning "3.4. $(VPATH) $(SRC_PATH)")
#5. 定义编译中间文件存放路径
OBJ_DIR = ./obj
OBJ_PATH = $(addprefix $(OBJ_DIR)/, $(subst :, ,$(VPATH)))
$(warning "5. $(OBJ_DIR) $(OBJ_PATH)")
#6. 定义链接成目标 所有的obj 文件
OBJS = $(addprefix $(OBJ_DIR)/,$(subst .cpp, .o, $(SRC_PATH)))
$(warning "6. $(OBJS)")
#7. 定义依赖文件名称
DEPS = $(OBJS:.o=.o.d)
#8. 创建 obj 文件存放的目录
MAKE_OBJECT_DIR := $(shell mkdir -p $(OBJ_DIR) $(OBJ_PATH))
$(warning "7.8. $(DEPS) $(MAKE_OBJECT_DIR)")
#9. 定义编译器
CXX = g++
CXXFLAGS = -std=c++11 -g $(INC_PATH)
LDXXFLAGS = $(LIBS) $(LIB_PATH)
$(warning "9. $(CXXFLAGS) $(LDXXFLAGS)")
#10. 定义目标生成规则
$(TARGET):$(OBJS)
	$(CXX) -o $@ $(OBJS)  $(LDXXFLAGS)
$(warning "10......")
#11. 定义obj 文件生成规则
$(OBJ_DIR)/%.o : %.cpp
	$(CXX) $(CXXFLAGS) -o $@ -c %<
$(warning "11......")
#12. 定义预编译依赖 文件生成规则
$(OBJ_DIR)/%.o.d : %.cpp
	@set -e; rm -f $@; \
	$(CXX) $< -MM -std=c++11 $(INC_PATH) > $@.$$$$; \
	sed 's,.*\.o[ ]*:,$(OBJ_DIR)/$*.o $@ :,g' < $@.$$$$ > $@; \
	rm -f $@.$$$$
$(warning "12......")

#13. 引入编译依赖文件
ifneq ($(MAKECMDGOALS), clean)
$(warning "$(DEPS) xxxxxxxxx......")
sinclude $(DEPS)
$(warning "yyyyyyyyy......")

endif
$(warning "13......")

#14. clean
clean:
#rm -rf ./obj
	rm -rf $(TARGET)

